unit u_cCliente;

interface
uses System.Classes, Vcl.Controls, Vcl.ExtCtrls, Vcl.Dialogs, u_dtm_conexao,
     ZAbstractConnection, ZConnection,ZAbstractRODataset, ZAbstractDataset,
     ZDataset, system.SysUtils;

type
  TCliente = class
  private
    conexaoDb: TZConnection;

    f_id: integer;
    f_nome: String;
    f_endereco: String;
    f_cidade: String;
    f_numero: String;
    f_bairro: String;
    f_cep: String;
    f_email: String;
    f_telefone: String;
    f_dataNascimento: String;
    f_estado: String;

    function getCodigo: integer;
    function getDescricao: string;
    procedure setCodigo(const Value: integer);
    procedure setDescricao(const Value: string);
    function getBairro: string;
    function getCep: string;
    function getCidade: string;
    function getDataNascimento: string;
    function getEmail: string;
    function getEndereco: string;
    function getEstado: string;
    function getNome: string;
    function getNumero: string;
    function getTelefone: string;
    procedure setBairro(const Value: string);
    procedure setCep(const Value: string);
    procedure setCidade(const Value: string);
    procedure setDataNascimento(const Value: string);
    procedure setEmail(const Value: string);
    procedure setEndereco(const Value: string);
    procedure setEstado(const Value: string);
    procedure setNome(const Value: string);
    procedure setNumero(const Value: string);
    procedure setTelefone(const Value: string);
  public
      constructor Create(aConexao:TZConnection);
      destructor Destroy; override;
      function inserir:Boolean;
      function atualizar:Boolean;
      function apagar(id: integer;descricao: string):Boolean;
      function selecionar(id: integer):Boolean;
  published
      property codigo: integer read getCodigo write setCodigo;
      property nome: string read getNome write setNome;
      property endereco: string read getEndereco write setEndereco;
      property cidade: string read getCidade write setCidade;
      property numero: string read getNumero write setNumero;
      property bairro: string read getBairro write setBairro;
      property cep: string read getCep write setCep;
      property email: string read getEmail write setEmail;
      property telefone: string read getTelefone write setTelefone;
      property dataNascimento: string read getDataNascimento write setDataNascimento;
      property estado: string read getEstado write setEstado;

  end;

implementation

{ TCliente }

{$REGION 'CRUD'}
function TCliente.apagar(id: integer; descricao: string): Boolean;
begin

end;

function TCliente.atualizar: Boolean;
begin

end;

function TCliente.selecionar(id: integer): Boolean;
begin

end;
{$ENDREGION}

function TCliente.inserir: Boolean;
begin

end;

constructor TCliente.Create(aConexao: TZConnection);
begin

end;

destructor TCliente.Destroy;
begin

  inherited;
end;

function TCliente.getBairro: string;
begin

end;

function TCliente.getCep: string;
begin

end;

function TCliente.getCidade: string;
begin

end;

function TCliente.getCodigo: integer;
begin

end;

function TCliente.getDataNascimento: string;
begin

end;

function TCliente.getDescricao: string;
begin

end;

function TCliente.getEmail: string;
begin

end;

function TCliente.getEndereco: string;
begin

end;

function TCliente.getEstado: string;
begin

end;

function TCliente.getNome: string;
begin

end;

function TCliente.getNumero: string;
begin

end;

function TCliente.getTelefone: string;
begin

end;

procedure TCliente.setBairro(const Value: string);
begin

end;

procedure TCliente.setCep(const Value: string);
begin

end;

procedure TCliente.setCidade(const Value: string);
begin

end;

procedure TCliente.setCodigo(const Value: integer);
begin

end;

procedure TCliente.setDataNascimento(const Value: string);
begin

end;

procedure TCliente.setDescricao(const Value: string);
begin

end;

procedure TCliente.setEmail(const Value: string);
begin

end;

procedure TCliente.setEndereco(const Value: string);
begin

end;

procedure TCliente.setEstado(const Value: string);
begin

end;

procedure TCliente.setNome(const Value: string);
begin

end;

procedure TCliente.setNumero(const Value: string);
begin

end;

procedure TCliente.setTelefone(const Value: string);
begin

end;

end.
